const { passwordBreaker } = require('./challenge_20')

describe('generate possible password by options', 
    () => it.each([
        [
            ["X", "s", "-", "#"],
            [
                ["X", "s", "-", "#"], ["s", "X", "-", "#"], 
                ["s", "-", "X", "#"], ["s", "-", "#", "X"], 
                ["X", "-", "s", "#"], ["-", "X", "s", "#"], 
                ["-", "s", "X", "#"], ["-", "s", "#", "X"], 
                ["X", "-", "#", "s"], ["-", "X", "#", "s"], 
                ["-", "#", "X", "s"], ["-", "#", "s", "X"], 
                ["X", "s", "#", "-"], ["s", "X", "#", "-"], 
                ["s", "#", "X", "-"], ["s", "#", "-", "X"], 
                ["X", "#", "s", "-"], ["#", "X", "s", "-"], 
                ["#", "s", "X", "-"], ["#", "s", "-", "X"], 
                ["X", "#", "-", "s"], ["#", "X", "-", "s"], 
                ["#", "-", "X", "s"], ["#", "-", "s", "X"]
            ]
        ],
        [
            ["1", "2", "3"],
            [
                ["1", "2", "3"],["2", "1", "3"],
                ["2", "3", "1"],["1", "3", "2"],
                ["3", "1", "2"],["3", "2", "1"]
            ]
        ], 
        [
            [],
            [[]]
        ],
    ])
        ('when options is %s then possible options is %s', 
        (options, expected) => expect(passwordBreaker(options).sort()).toEqual(expected.sort())))
